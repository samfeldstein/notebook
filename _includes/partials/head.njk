<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

{# Include icons partial #}
{% include "partials/icons.njk" %}
{# Preload #}
<link rel="preload" href="/fonts/CMUTypewriterVariable.woff2" as="font" type="font/woff2" crossorigin>
<title>{{ title }}</title>
<meta name="description" content="{{ description or title or config.site.description }}" />
<link rel="sitemap" href="/sitemap.xml" />
<link rel="alternate" href="/feed.xml" type="application/atom+xml" title="{{ config.site.title }}">
<meta name="generator" content="{{ eleventy.generator }}" />

{# Open Graph #}
<meta property="og:title" content="{{ ogTitle or title or config.site.title}}" />
<meta property="og:description" content="{{description or title}}" />
<meta property="og:type" content={{ogType or "website" }} />
<meta property="og:url" content="https://notes.samfeldstein.xyz{{page.url}}" />
<meta property="og:image" content="{{ogImage or 'https://notes.samfeldstein.xyz/images/open-graph-image.png' }}" />

{# Styles #}
{% include "partials/inline-css.njk" %}

{# Unresigster service workers #}
<script>
  async function uninstallServiceWorkers() {
    try {
      // Get a list of all service worker registrations
      const registrations = await navigator.serviceWorker.getRegistrations();

      if (registrations.length === 0) {
        console.log("No service workers found to uninstall");
        return;
      }

      // Uninstall each service worker
      const uninstallPromises = registrations.map(async (registration) => {
        try {
          const success = await registration.unregister();
          if (success) {
            console.log(
              `Service worker at ${registration.scope} successfully uninstalled`,
            );
          } else {
            console.warn(
              `Failed to uninstall service worker at ${registration.scope}`,
            );
          }
        } catch (error) {
          console.error(
            `Error uninstalling service worker at ${registration.scope}:`,
            error,
          );
        }
      });

      // Wait for all uninstallation attempts to complete
      await Promise.all(uninstallPromises);

      console.log("Service worker uninstallation process completed");

      // Optional: Reload the page to ensure clean state
      // window.location.reload();
    } catch (error) {
      console.error("Error during service worker uninstallation:", error);
      throw error;
    }
  }

  uninstallServiceWorkers();
</script>

{# Prefetch all internal links #}
<script type="speculationrules">
    {
      "prefetch": [{
        "source": "document",
        "where": {
          "href_matches": "/*",
          "relative_to": "document"
        },
        "eagerness": "immediate"
      }]
    }
</script>